# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, masogram Team
# This file is distributed under the same license as the masogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: masogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-14 14:13+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../api/types/user.rst:3
msgid "User"
msgstr ""

#: ../../../masogram/types/user.py:docstring of masogram.types.user.User:1
msgid "This object represents a Telegram user or bot."
msgstr ""

#: ../../../masogram/types/user.py:docstring of masogram.types.user.User:3
msgid "Source: https://core.telegram.org/bots/api#user"
msgstr ""

#: ../../docstring of masogram.types.user.User.id:1
msgid "Unique identifier for this user or bot. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier."
msgstr ""

#: ../../docstring of masogram.types.user.User.is_bot:1
msgid ":code:`True`, if this user is a bot"
msgstr ""

#: ../../docstring of masogram.types.user.User.first_name:1
msgid "User's or bot's first name"
msgstr ""

#: ../../docstring of masogram.types.user.User.last_name:1
msgid "*Optional*. User's or bot's last name"
msgstr ""

#: ../../docstring of masogram.types.user.User.username:1
msgid "*Optional*. User's or bot's username"
msgstr ""

#: ../../docstring of masogram.types.user.User.language_code:1
msgid "*Optional*. `IETF language tag <https://en.wikipedia.org/wiki/IETF_language_tag>`_ of the user's language"
msgstr ""

#: ../../docstring of masogram.types.user.User.is_premium:1
msgid "*Optional*. :code:`True`, if this user is a Telegram Premium user"
msgstr ""

#: ../../docstring of masogram.types.user.User.added_to_attachment_menu:1
msgid "*Optional*. :code:`True`, if this user added the bot to the attachment menu"
msgstr ""

#: ../../docstring of masogram.types.user.User.can_join_groups:1
msgid "*Optional*. :code:`True`, if the bot can be invited to groups. Returned only in :class:`masogram.methods.get_me.GetMe`."
msgstr ""

#: ../../docstring of masogram.types.user.User.can_read_all_group_messages:1
msgid "*Optional*. :code:`True`, if `privacy mode <https://core.telegram.org/bots/features#privacy-mode>`_ is disabled for the bot. Returned only in :class:`masogram.methods.get_me.GetMe`."
msgstr ""

#: ../../docstring of masogram.types.user.User.supports_inline_queries:1
msgid "*Optional*. :code:`True`, if the bot supports inline queries. Returned only in :class:`masogram.methods.get_me.GetMe`."
msgstr ""

#: ../../../masogram/types/user.py:docstring of masogram.types.user.User.get_profile_photos:1
msgid "Shortcut for method :class:`masogram.methods.get_user_profile_photos.GetUserProfilePhotos` will automatically fill method attributes:"
msgstr ""

#: ../../../masogram/types/user.py:docstring of masogram.types.user.User.get_profile_photos:4
msgid ":code:`user_id`"
msgstr ""

#: ../../../masogram/types/user.py:docstring of masogram.types.user.User.get_profile_photos:6
msgid "Use this method to get a list of profile pictures for a user. Returns a :class:`masogram.types.user_profile_photos.UserProfilePhotos` object."
msgstr ""

#: ../../../masogram/types/user.py:docstring of masogram.types.user.User.get_profile_photos:8
msgid "Source: https://core.telegram.org/bots/api#getuserprofilephotos"
msgstr ""

#: ../../../masogram/types/user.py:docstring of masogram.types.user.User.get_profile_photos:0
msgid "Parameters"
msgstr ""

#: ../../../masogram/types/user.py:docstring of masogram.types.user.User.get_profile_photos:10
msgid "Sequential number of the first photo to be returned. By default, all photos are returned."
msgstr ""

#: ../../../masogram/types/user.py:docstring of masogram.types.user.User.get_profile_photos:11
msgid "Limits the number of photos to be retrieved. Values between 1-100 are accepted. Defaults to 100."
msgstr ""

#: ../../../masogram/types/user.py:docstring of masogram.types.user.User.get_profile_photos:0
msgid "Returns"
msgstr ""

#: ../../../masogram/types/user.py:docstring of masogram.types.user.User.get_profile_photos:12
msgid "instance of method :class:`masogram.methods.get_user_profile_photos.GetUserProfilePhotos`"
msgstr ""
