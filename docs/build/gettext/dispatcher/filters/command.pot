# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, masogram Team
# This file is distributed under the same license as the masogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: masogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-14 14:13+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../dispatcher/filters/command.rst:3
msgid "Command"
msgstr ""

#: ../../../masogram/filters/command.py:docstring of masogram.filters.command.Command:1
msgid "This filter can be helpful for handling commands from the text messages."
msgstr ""

#: ../../../masogram/filters/command.py:docstring of masogram.filters.command.Command:3
msgid "Works only with :class:`masogram.types.message.Message` events which have the :code:`text`."
msgstr ""

#: ../../../masogram/filters/command.py:docstring of masogram.filters.command.Command.__init__:1
msgid "List of commands (string or compiled regexp patterns)"
msgstr ""

#: ../../../masogram/filters/command.py:docstring of masogram.filters.command.Command.__init__:0
msgid "Parameters"
msgstr ""

#: ../../../masogram/filters/command.py:docstring of masogram.filters.command.Command.__init__:3
msgid "Prefix for command. Prefix is always a single char but here you can pass all of allowed prefixes, for example: :code:`\"/!\"` will work with commands prefixed by :code:`\"/\"` or :code:`\"!\"`."
msgstr ""

#: ../../../masogram/filters/command.py:docstring of masogram.filters.command.Command.__init__:7
msgid "Ignore case (Does not work with regexp, use flags instead)"
msgstr ""

#: ../../../masogram/filters/command.py:docstring of masogram.filters.command.Command.__init__:8
msgid "Ignore bot mention. By default, bot can not handle commands intended for other bots"
msgstr ""

#: ../../../masogram/filters/command.py:docstring of masogram.filters.command.Command.__init__:10
msgid "Validate command object via Magic filter after all checks done"
msgstr ""

#: ../../dispatcher/filters/command.rst:10
msgid "When filter is passed the :class:`masogram.filters.command.CommandObject` will be passed to the handler argument :code:`command`"
msgstr ""

#: ../../../masogram/filters/command.py:docstring of masogram.filters.command.CommandObject:1
msgid "Instance of this object is always has command and it prefix. Can be passed as keyword argument **command** to the handler"
msgstr ""

#: ../../docstring of masogram.filters.command.CommandObject.prefix:1
msgid "Command prefix"
msgstr ""

#: ../../docstring of masogram.filters.command.CommandObject.command:1
msgid "Command without prefix and mention"
msgstr ""

#: ../../docstring of masogram.filters.command.CommandObject.mention:1
msgid "Mention (if available)"
msgstr ""

#: ../../docstring of masogram.filters.command.CommandObject.args:1
msgid "Command argument"
msgstr ""

#: ../../docstring of masogram.filters.command.CommandObject.regexp_match:1
msgid "Will be presented match result if the command is presented as regexp in filter"
msgstr ""

#: ../../../masogram/filters/command.py:docstring of masogram.filters.command.CommandObject.mentioned:1
msgid "This command has mention?"
msgstr ""

#: ../../../masogram/filters/command.py:docstring of masogram.filters.command.CommandObject.text:1
msgid "Generate original text from object"
msgstr ""

#: ../../dispatcher/filters/command.rst:19
msgid "Usage"
msgstr ""

#: ../../dispatcher/filters/command.rst:21
msgid "Filter single variant of commands: :code:`Command(\"start\")`"
msgstr ""

#: ../../dispatcher/filters/command.rst:22
msgid "Handle command by regexp pattern: :code:`Command(re.compile(r\"item_(\\d+)\"))`"
msgstr ""

#: ../../dispatcher/filters/command.rst:23
msgid "Match command by multiple variants: :code:`Command(\"item\", re.compile(r\"item_(\\d+)\"))`"
msgstr ""

#: ../../dispatcher/filters/command.rst:24
msgid "Handle commands in public chats intended for other bots: :code:`Command(\"command\", ignore_mention=True)`"
msgstr ""

#: ../../dispatcher/filters/command.rst:25
msgid "Use :class:`masogram.types.bot_command.BotCommand` object as command reference :code:`Command(BotCommand(command=\"command\", description=\"My awesome command\")`"
msgstr ""

#: ../../dispatcher/filters/command.rst:29
msgid "Command cannot include spaces or any whitespace"
msgstr ""

#: ../../dispatcher/filters/command.rst:32
msgid "Allowed handlers"
msgstr ""

#: ../../dispatcher/filters/command.rst:34
msgid "Allowed update types for this filter:"
msgstr ""

#: ../../dispatcher/filters/command.rst:36
msgid "`message`"
msgstr ""

#: ../../dispatcher/filters/command.rst:37
msgid "`edited_message`"
msgstr ""
