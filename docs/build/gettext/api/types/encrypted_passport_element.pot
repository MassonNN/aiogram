# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, masogram Team
# This file is distributed under the same license as the masogram package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: masogram \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-14 14:13+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../api/types/encrypted_passport_element.rst:3
msgid "EncryptedPassportElement"
msgstr ""

#: ../../../masogram/types/encrypted_passport_element.py:docstring of masogram.types.encrypted_passport_element.EncryptedPassportElement:1
msgid "Describes documents or other Telegram Passport elements shared with the bot by the user."
msgstr ""

#: ../../../masogram/types/encrypted_passport_element.py:docstring of masogram.types.encrypted_passport_element.EncryptedPassportElement:3
msgid "Source: https://core.telegram.org/bots/api#encryptedpassportelement"
msgstr ""

#: ../../docstring of masogram.types.encrypted_passport_element.EncryptedPassportElement.type:1
msgid "Element type. One of 'personal_details', 'passport', 'driver_license', 'identity_card', 'internal_passport', 'address', 'utility_bill', 'bank_statement', 'rental_agreement', 'passport_registration', 'temporary_registration', 'phone_number', 'email'."
msgstr ""

#: ../../docstring of masogram.types.encrypted_passport_element.EncryptedPassportElement.hash:1
msgid "Base64-encoded element hash for using in :class:`masogram.types.passport_element_error_unspecified.PassportElementErrorUnspecified`"
msgstr ""

#: ../../docstring of masogram.types.encrypted_passport_element.EncryptedPassportElement.data:1
msgid "*Optional*. Base64-encoded encrypted Telegram Passport element data provided by the user, available for 'personal_details', 'passport', 'driver_license', 'identity_card', 'internal_passport' and 'address' types. Can be decrypted and verified using the accompanying :class:`masogram.types.encrypted_credentials.EncryptedCredentials`."
msgstr ""

#: ../../docstring of masogram.types.encrypted_passport_element.EncryptedPassportElement.phone_number:1
msgid "*Optional*. User's verified phone number, available only for 'phone_number' type"
msgstr ""

#: ../../docstring of masogram.types.encrypted_passport_element.EncryptedPassportElement.email:1
msgid "*Optional*. User's verified email address, available only for 'email' type"
msgstr ""

#: ../../docstring of masogram.types.encrypted_passport_element.EncryptedPassportElement.files:1
msgid "*Optional*. Array of encrypted files with documents provided by the user, available for 'utility_bill', 'bank_statement', 'rental_agreement', 'passport_registration' and 'temporary_registration' types. Files can be decrypted and verified using the accompanying :class:`masogram.types.encrypted_credentials.EncryptedCredentials`."
msgstr ""

#: ../../docstring of masogram.types.encrypted_passport_element.EncryptedPassportElement.front_side:1
msgid "*Optional*. Encrypted file with the front side of the document, provided by the user. Available for 'passport', 'driver_license', 'identity_card' and 'internal_passport'. The file can be decrypted and verified using the accompanying :class:`masogram.types.encrypted_credentials.EncryptedCredentials`."
msgstr ""

#: ../../docstring of masogram.types.encrypted_passport_element.EncryptedPassportElement.reverse_side:1
msgid "*Optional*. Encrypted file with the reverse side of the document, provided by the user. Available for 'driver_license' and 'identity_card'. The file can be decrypted and verified using the accompanying :class:`masogram.types.encrypted_credentials.EncryptedCredentials`."
msgstr ""

#: ../../docstring of masogram.types.encrypted_passport_element.EncryptedPassportElement.selfie:1
msgid "*Optional*. Encrypted file with the selfie of the user holding a document, provided by the user; available for 'passport', 'driver_license', 'identity_card' and 'internal_passport'. The file can be decrypted and verified using the accompanying :class:`masogram.types.encrypted_credentials.EncryptedCredentials`."
msgstr ""

#: ../../docstring of masogram.types.encrypted_passport_element.EncryptedPassportElement.translation:1
msgid "*Optional*. Array of encrypted files with translated versions of documents provided by the user. Available if requested for 'passport', 'driver_license', 'identity_card', 'internal_passport', 'utility_bill', 'bank_statement', 'rental_agreement', 'passport_registration' and 'temporary_registration' types. Files can be decrypted and verified using the accompanying :class:`masogram.types.encrypted_credentials.EncryptedCredentials`."
msgstr ""
